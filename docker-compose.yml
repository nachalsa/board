services:
  app:
    build: .
    user: "${UID}:${GID}"
    ports:
      - "80:8080"
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_USER=fileuser
      - DB_PASSWORD=filepass
      - DB_NAME=filedb
      - DB_PORT=5432
      - SERVER_PORT=8080
      - ADMIN_PORT=8081
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-500}
      - UPLOADS_DIR=${UPLOADS_DIR:-files/uploads}
      - UPLOADS_DELETED_DIR=${UPLOADS_DELETED_DIR:-files/deleted}
    volumes:
      - ./files:/app/files
      - ./web:/app/web
    restart: unless-stopped
    networks:
      - file-board-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=fileuser
      - POSTGRES_PASSWORD=filepass
      - POSTGRES_DB=filedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - file-board-network

volumes:
  postgres_data:

networks:
  file-board-network:
    driver: bridge